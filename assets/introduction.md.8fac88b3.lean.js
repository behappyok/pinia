import{_ as n,c as s,o as a,a as t}from"./app.fb0cb03d.js";const h='{"title":"\u4ECB\u7ECD","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6211\u9700\u8981\u4F7F\u7528Pinia\u5417\uFF1F","slug":"\u6211\u9700\u8981\u4F7F\u7528pinia\u5417\uFF1F"},{"level":2,"title":"\u57FA\u7840\u793A\u4F8B","slug":"\u57FA\u7840\u793A\u4F8B"},{"level":2,"title":"Pinia \u662F\u4EC0\u4E48\u610F\u601D","slug":"pinia-\u662F\u4EC0\u4E48\u610F\u601D"},{"level":2,"title":"\u4E00\u4E2A\u66F4\u63A5\u8FD1\u4E8E\u5B9E\u9645\u5F00\u53D1\u7684\u4F8B\u5B50","slug":"\u4E00\u4E2A\u66F4\u63A5\u8FD1\u4E8E\u5B9E\u9645\u5F00\u53D1\u7684\u4F8B\u5B50"},{"level":2,"title":"\u4E0E Vuex \u7684\u6BD4\u8F83","slug":"\u4E0E-vuex-\u7684\u6BD4\u8F83"},{"level":3,"title":"RFCs","slug":"rfcs"},{"level":3,"title":"\u4E0E Vuex 3.x/4.x \u7684\u5BF9\u6BD4","slug":"\u4E0E-vuex-3-x-4-x-\u7684\u5BF9\u6BD4"}],"relativePath":"introduction.md","lastUpdated":1637048271678}',p={},o=t(`__VP_STATIC_START__<h1 id="\u4ECB\u7ECD" tabindex="-1">\u4ECB\u7ECD <a class="header-anchor" href="#\u4ECB\u7ECD" aria-hidden="true">#</a></h1><p>Pinia <a href="https://github.com/posva/pinia/commit/06aeef54e2cad66696063c62829dac74e15fd19e" target="_blank" rel="noopener noreferrer">\u8D77\u6E90\u4E8E</a>2019 \u5E74 11 \u6708\u5DE6\u53F3\u5229\u7528 <a href="https://github.com/vuejs/composition-api" target="_blank" rel="noopener noreferrer">\u7EC4\u5408\u5F0FAPI(Composition API)</a>\u91CD\u65B0\u8BBE\u8BA1\u4E00\u4E2A\u9002\u7528\u4E8E Vue \u72B6\u6001\u7BA1\u7406\u7684\u5B9E\u9A8C\u9879\u76EE\u3002\u4ECE\u90A3\u65F6\u8D77, \u5B9E\u9A8C\u9879\u76EE\u548CPinia\u7684\u76EE\u7684\u4E00\u76F4\u4FDD\u6301\u4E00\u81F4,\u4F46\u662F Pinia \u540C\u65F6\u9002\u7528\u4E8E Vue 2 \u548C Vue 3 <strong>\uFF0C\u5E76\u4E14\u4E0D\u9700\u8981\u60A8\u4F7F\u7528\u7EC4\u5408\u5F0F API</strong>. \u9664\u4E86 <em>\u5B89\u88C5</em> \u548C <em>\u670D\u52A1\u7AEF\u6E32\u67D3\uFF08SSR\uFF09</em> \u4E4B\u5916\uFF0C\u5BF9\u4E8EVue 2 \u548C Vue 3 \u4E24\u8005API \u662F\u4E00\u81F4\u7684, \u672C\u6587\u6863\u4EE5Vue3\u4E3A\u4F8B\uFF0C\u5E76\u5728\u5FC5\u8981\u65F6<strong>\u63D0\u4F9B\u6709\u5173 Vue 2 \u7684\u6CE8\u91CA</strong> \u4EE5\u4FBF Vue 2 \u548C Vue 3 \u7528\u6237\u9605\u8BFB!</p><h2 id="\u6211\u9700\u8981\u4F7F\u7528pinia\u5417\uFF1F" tabindex="-1">\u6211\u9700\u8981\u4F7F\u7528Pinia\u5417\uFF1F <a class="header-anchor" href="#\u6211\u9700\u8981\u4F7F\u7528pinia\u5417\uFF1F" aria-hidden="true">#</a></h2><p>Pinia \u662F Vue \u7684\u72B6\u6001\u7BA1\u7406\u5E93, \u5B83\u4F7F\u60A8\u53EF\u4EE5\u8DE8\u7EC4\u4EF6/\u9875\u9762\u5171\u4EAB\u72B6\u6001. \u5982\u679C\u60A8\u719F\u6089 Composition API, \u60A8\u53EF\u80FD\u4F1A\u8BA4\u4E3A\u60A8\u53EA\u9700\u8981\u4F7F\u7528\u4E00\u884C\u4EE3\u7801<code>export const state = reactive({})</code>\u5C31\u53EF\u4EE5\u8FBE\u5230\u5171\u4EAB\u5168\u5C40\u72B6\u6001\u7684\u76EE\u7684. \u5BF9\u4E8E\u5355\u9875\u5E94\u7528\u7A0B\u5E8F\u8FD9\u6837\u7684\u786E\u53EF\u4EE5\uFF0C\u4F46\u662F\u5BF9\u4E8E\u670D\u52A1\u7AEF\u6E32\u67D3\u6765\u8BF4\u8FD9\u6837\u4F1A\u5E26\u6765 <strong>\u66B4\u9732\u5E94\u7528\u6570\u636E\u7684\u5B89\u5168\u95EE\u9898</strong> \u3002 \u800C\u5982\u679C\u60A8\u4F7F\u7528Pinia, \u4F60\u5C06\u53D7\u76CA\u591A\u591A\uFF0C\u5373\u4F7F\u4F60\u7684\u5E94\u7528\u662F\u4E00\u4E2A\u5C0F\u578B\u5355\u9875\u9762\u5E94\u7528:</p><ul><li>\u652F\u6301\u5F00\u53D1\u5DE5\u5177 <ul><li>\u53EF\u4EE5\u8DDF\u8E2A\u64CD\u4F5C\u3001\u7A81\u53D8\u7684\u65F6\u95F4\u7EBF</li><li>\u72B6\u6001\u5E93\u4EC5\u51FA\u73B0\u5728\u88AB\u4F7F\u7528\u7684\u7EC4\u4EF6\u4E2D</li><li>\u65F6\u95F4\u65C5\u884C\u5E76\u4E14\u66F4\u6613\u4E8E\u8C03\u8BD5</li></ul></li><li>\u6A21\u5757\u70ED\u66F4\u6362 <ul><li>\u65E0\u9700\u91CD\u65B0\u52A0\u8F7D\u9875\u9762\u5373\u53EF\u4FEE\u6539\u60A8\u7684\u72B6\u6001\u5E93</li><li>\u5F00\u53D1\u65F6\u7684\u72B6\u6001\u4FDD\u6301</li></ul></li><li>\u63D2\u4EF6: \u4F7F\u7528\u63D2\u4EF6\u6269\u5C55 Pania \u529F\u80FD</li><li>\u4E3A JS \u7528\u6237\u63D0\u4F9B\u9002\u5F53\u7684 TypeScript \u652F\u6301\u6216<strong>\u81EA\u52A8\u8865\u5168</strong></li><li>\u652F\u6301\u670D\u52A1\u5668\u7AEF\u6E32\u67D3</li></ul><h2 id="\u57FA\u7840\u793A\u4F8B" tabindex="-1">\u57FA\u7840\u793A\u4F8B <a class="header-anchor" href="#\u57FA\u7840\u793A\u4F8B" aria-hidden="true">#</a></h2><p>\u8FD9\u662F\u4E00\u4E2A\u8C03\u7528 API \u7684\u793A\u4F8B(\u8BF7\u52A1\u5FC5\u67E5\u770B <a href="./getting-started.html">\u5165\u95E8</a>\u4EE5\u83B7\u53D6\u5B8C\u6574\u8BF4\u660E)\u3002 \u9996\u5148\u521B\u5EFA\u4E00\u4E2AStore:</p><div class="language-js"><pre><code><span class="token comment">// stores/counter.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useCounterStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u4E5F\u53EF\u4EE5\u8FD9\u4E48\u5B9A\u4E49</span>
  <span class="token comment">// state: () =&gt; ({ count: 0 })</span>
  actions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u7136\u540E\u4F60\u5C31\u53EF\u4EE5\u5728\u7EC4\u4EF6\u4E2D\u4F7F\u7528\u5B83\uFF1A:</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useCounterStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/counter&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token function">useCounterStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    counter<span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token comment">// \u4F7F\u7528\u81EA\u52A8\u8865\u5168\u4EE3\u7801\u7684\u65B9\u5F0F \u2728</span>
    counter<span class="token punctuation">.</span><span class="token function">$patch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token operator">:</span> counter<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6216\u8005\u4F7F\u7528\u64CD\u4F5C</span>
    counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u60A8\u4E5F\u53EF\u4EE5\u4F7F\u7528\u51FD\u6570\u5F0F\uFF08\u7C7B\u4F3C\u4E8E\u7EC4\u4EF6<code>setup()</code>\uFF09\u6765\u5B9A\u4E49\u4E00\u4E2AStore</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> useCounterStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">function</span> <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count<span class="token punctuation">.</span>value<span class="token operator">++</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> increment <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5982\u679C\u4F60\u5BF9\u7EC4\u4EF6 <code>setup()</code> \u548C\u590D\u5408\u5F0F API\u8FD8\u4E0D\u4E86\u89E3, \u4E0D\u7528\u62C5\u5FC3, Pania \u4E5F\u652F\u6301 <a href="https://vuex.vuejs.org/guide/state.html#the-mapstate-helper" target="_blank" rel="noopener noreferrer">\u7C7B\u4F3C\u4E8EVuex\u7684 <em>map\u8F85\u52A9\u51FD\u6570</em></a>. \u4F60\u53EF\u4EE5\u50CF\u4F7F\u7528Vuex\u4E00\u6837\u521B\u5EFAStore\u5E76\u4F7F\u7528 <code>mapStores()</code>, <code>mapState()</code>, <code>mapActions()</code> \u8F85\u52A9\u51FD\u6570:</p><div class="language-js"><pre><code><span class="token keyword">const</span> useCounterStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  getters<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">double</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  actions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> useUserStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  computed<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5176\u4ED6\u8BA1\u7B97\u5C5E\u6027</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// \u6620\u5C04 this.counterStore \u548C this.userStore \u5C5E\u6027</span>
    <span class="token operator">...</span><span class="token function">mapStores</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> useUserStore<span class="token punctuation">)</span>
    <span class="token comment">// \u53EA\u8BFB\u6620\u5C04 this.count \u548C this.double \u5C5E\u6027</span>
    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;double&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  methods<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6620\u5C04 this.increment() \u64CD\u4F5C</span>
    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span>useCounterStore<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u60A8\u53EF\u4EE5\u6838\u5FC3\u6982\u5FF5\u7AE0\u8282\u4E86\u89E3\u66F4\u591A\u5173\u4E8E\u6BCF\u4E2A <em>map\u529F\u80FD</em> \u7684\u4FE1\u606F\u3002</p><h2 id="pinia-\u662F\u4EC0\u4E48\u610F\u601D" tabindex="-1"><em>Pinia</em> \u662F\u4EC0\u4E48\u610F\u601D <a class="header-anchor" href="#pinia-\u662F\u4EC0\u4E48\u610F\u601D" aria-hidden="true">#</a></h2><p>Pinia (\u82F1\u8BED\u53D1\u97F3\u4E3A <code>/peenya/</code> ) \u662F\u4E00\u4E2A\u6700\u63A5\u8FD1 <em>pi\xF1a</em> (\u897F\u73ED\u7259\u8BED\u4E2D\u7684 <em>pineapple</em> [\u83E0\u841D])\u7684\u5355\u8BCD\u3002 \u83E0\u841D\u5B9E\u9645\u4E0A\u662F\u7531\u4E00\u4E2A\u4E2A\u72EC\u7ACB\u7684\u82B1\u6735\u7ED3\u5408\u5728\u4E00\u8D77\u5F62\u6210\u7684\u6C34\u679C\u3002\u72B6\u6001\u7BA1\u7406stores\u4E5F\u662F\u4E00\u6837, \u6BCF\u4E2Astore\u90FD\u662F\u72EC\u7ACB\u521B\u5EFA\u7684\uFF0C \u4F46\u6700\u7EC8\u5408\u5728\u4E00\u8D77\u76F8\u4E92\u4F5C\u7528\u3002\u6240\u4EE5Pinia\u65E2\u662F\u4E00\u4E2A\u72B6\u6001\u7BA1\u7406\u5E93\u7684\u5305\u540D\uFF0C\u4E5F\u662F\u4E00\u79CD\u539F\u4EA7\u4E8E\u5357\u7F8E\u6D32\u7684\u7F8E\u5473\u70ED\u5E26\u6C34\u679C\u3002</p><h2 id="\u4E00\u4E2A\u66F4\u63A5\u8FD1\u4E8E\u5B9E\u9645\u5F00\u53D1\u7684\u4F8B\u5B50" tabindex="-1">\u4E00\u4E2A\u66F4\u63A5\u8FD1\u4E8E\u5B9E\u9645\u5F00\u53D1\u7684\u4F8B\u5B50 <a class="header-anchor" href="#\u4E00\u4E2A\u66F4\u63A5\u8FD1\u4E8E\u5B9E\u9645\u5F00\u53D1\u7684\u4F8B\u5B50" aria-hidden="true">#</a></h2><p>\u8FD9\u662F\u4E00\u4E2A\u66F4\u5B8C\u6574\u7684<strong>\u5728JS\u4E2D\u4F7F\u7528\u7C7B\u578B</strong>\u7684API \u793A\u4F8B\u3002 \u8FD9\u5BF9\u4E8E\u67D0\u4E9B\u4EBA\u6765\u8BF4\u53EF\u80FD\u4E0D\u9700\u8981\u9700\u8FDB\u4E00\u6B65\u9605\u8BFB\u4FBF\u53EF\u5F00\u59CB\u4F7F\u7528\uFF0C\u4F46\u6211\u4EEC\u4ECD\u7136\u5EFA\u8BAE\u60A8\u67E5\u770B\u6587\u6863\u7684\u5176\u4F59\u90E8\u5206\u3002\u6216\u8005\u4F60\u4E5F\u53EF\u4EE5\u8DF3\u8FC7\u6B64\u793A\u4F8B\uFF0C\u7B49\u5230\u4F60\u9605\u8BFB\u5B8C\u6240\u6709\u6838\u5FC3\u6982\u5FF5\u540E\u518D\u6765\u67E5\u770B\u672C\u793A\u4F8B\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> todos <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;todos&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">/** @type {{ text: string, id: number, isFinished: boolean }[]} */</span>
    todos<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">/** @type {&#39;all&#39; | &#39;finished&#39; | &#39;unfinished&#39;} */</span>
    filter<span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// type will be automatically inferred to number</span>
    nextId<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  getters<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">finishedTodos</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// autocompletion! \u2728</span>
      <span class="token keyword">return</span> state<span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> todo<span class="token punctuation">.</span>isFinished<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">unfinishedTodos</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> state<span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>todo<span class="token punctuation">.</span>isFinished<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/**
     * @returns {{ text: string, id: number, isFinished: boolean }[]}
     */</span>
    <span class="token function">filteredTodos</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>filter <span class="token operator">===</span> <span class="token string">&#39;finished&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// call other getters with autocompletion \u2728</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>finishedTodos
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>filter <span class="token operator">===</span> <span class="token string">&#39;unfinished&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>unfinishedTodos
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>todos
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  actions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// any amount of arguments, return a promise or not</span>
    <span class="token function">addTodo</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// you can directly mutate the state</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> text<span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nextId<span class="token operator">++</span><span class="token punctuation">,</span> isFinished<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u4E0E-vuex-\u7684\u6BD4\u8F83" tabindex="-1">\u4E0E Vuex \u7684\u6BD4\u8F83 <a class="header-anchor" href="#\u4E0E-vuex-\u7684\u6BD4\u8F83" aria-hidden="true">#</a></h2><p>Pinia \u5C1D\u8BD5\u5C3D\u53EF\u80FD\u63A5\u8FD1 Vuex \u7684\u7406\u5FF5\u3002Pinia\u65E8\u5728\u6D4B\u8BD5 Vuex \u4E0B\u4E00\u6B21\u8FED\u4EE3\u7684\u63D0\u6848\uFF0C\u6211\u4EEC\u5728\u8FD9\u4E2A\u76EE\u7684\u4E0A\u5F88\u6210\u529F\uFF0C\u6211\u4EEC\u76EE\u524D\u6709\u4E00\u4E2A\u9488\u5BF9 Vuex 5 \u7684\u5F00\u653E RFC <a href="https://github.com/vuejs/rfcs/discussions/270" target="_blank" rel="noopener noreferrer">\u5176 API </a> \u4E0EPinia \u7684 API \u975E\u5E38\u76F8\u4F3C\u3002 \u8BF7\u6CE8\u610F\uFF0C\u6211 (Eduardo)\u4F5C\u4E3APinia \u7684\u4F5C\u8005\u672C\u8EAB\u662F Vue.js \u6838\u5FC3\u56E2\u961F\u7684\u4E00\u5458\uFF0C\u5E76\u79EF\u6781\u53C2\u4E0E\u4E86 Router \u548C Vuex \u7B49 API \u7684\u8BBE\u8BA1\u3002\u6211\u4E2A\u4EBA\u505A\u8FD9\u4E2A\u9879\u76EE\u65E8\u5728\u91CD\u65B0\u8BBE\u8BA1\u4E00\u4E2A\u4F7F\u7528\u5168\u5C40 Store \u7684\u65B9\u5F0F\uFF0C\u540C\u65F6\u4FDD\u6301 Vue \u5E73\u6613\u8FD1\u4EBA\u7684\u54F2\u5B66\u3002\u6211\u8BA9 Pania\u5728\u4E0D\u65AD\u5411\u524D\u53D1\u5C55\u7684\u540C\u65F6\uFF0C\u4F7F\u5176 API \u5C3D\u91CF\u63A5\u8FD1 Vuex \uFF0C\u4EE5\u4FBF\u4EBA\u4EEC\u53EF\u4EE5\u968F\u65F6\u8F7B\u677E\u7684\u8FC1\u79FB\u5230 Vuex\uFF0C\u751A\u81F3\u5728\u672A\u6765\u4EE5Vuex\u4E3A\u4E3B\u5BFC\u878D\u5408\u8FD9\u4E24\u4E2A\u9879\u76EE\u3002</p><h3 id="rfcs" tabindex="-1">RFCs <a class="header-anchor" href="#rfcs" aria-hidden="true">#</a></h3><p>\u867D\u7136 Vuex \u901A\u8FC7 RFC \u4ECE\u793E\u533A\u6536\u96C6\u5C3D\u53EF\u80FD\u591A\u7684\u53CD\u9988\uFF0C\u4F46 Pania \u6CA1\u6709\u3002\u6211\u6839\u636E\u6211\u5728\u5F00\u53D1\u5E94\u7528\u7A0B\u5E8F\u3001\u9605\u8BFB\u5176\u4ED6\u4EBA\u7684\u4EE3\u7801\u548C\u5728 Discord \u4E0A\u56DE\u7B54\u95EE\u9898\u7684\u65B9\u5F0F\u6765\u6D4B\u8BD5\u6211\u7684\u4E00\u4E9B\u60F3\u6CD5\u3002\u8FD9\u4F7F\u6211\u80FD\u591F\u63D0\u51FA\u4E00\u4E2A\u884C\u4E4B\u6709\u6548\u7684\u65B9\u6848\u5E76\u5FEB\u901F\u53D1\u5E03\uFF0C\u5E76\u4E14\u53EF\u4EE5\u5728\u4EBA\u4EEC\u4F7F\u7528\u5B83\u65F6\u4E5F\u80FD\u6839\u636E\u5FC5\u8981\u5728\u4E3B\u8981\u7248\u672C\u4E2D\u8FDB\u884C\u5927\u5E45\u66F4\u6539\u6765\u6539\u8FDB\u5B83\u3002\uFF08\u4E00\u822C\u7684\u9879\u76EE\u5728\u7B2C\u4E00\u4E2A\u7A33\u5B9A\u7248\u672C\u53D1\u5E03\u540E\u4E0D\u4F1A\u505A\u91CD\u5927\u66F4\u6539\uFF09</p><h3 id="\u4E0E-vuex-3-x-4-x-\u7684\u5BF9\u6BD4" tabindex="-1">\u4E0E Vuex 3.x/4.x \u7684\u5BF9\u6BD4 <a class="header-anchor" href="#\u4E0E-vuex-3-x-4-x-\u7684\u5BF9\u6BD4" aria-hidden="true">#</a></h3><blockquote><p>Vuex 3.x \u7528\u4E8E Vue 2, \u800C Vuex 4.x \u7528\u4E8E Vue 3</p></blockquote><p>Pinia API \u4E0E Vuex \u22644 \u6709\u5F88\u5927\u4E0D\u540C:</p><ul><li><em>mutations</em> no longer exist. They were very often perceived as <strong><em>extremely</em> verbose</strong>. They initially brought devtools integration but that is no longer an issue.</li><li>No need to create custom complex wrappers to support TypeScript, everything is typed and the API is designed in a way to leverage TS type inference as much as possible.</li><li>No more magic strings to inject, import the functions, call them, enjoy autocompletion!</li><li>No need to dynamically add stores, they are all dynamic by default and you won&#39;t even notice. Note you can still manually use a store to register it whenever you want but because it is automatic you don&#39;t need to worry about it.</li><li>No more nested structuring of <em>modules</em>. You can still nest stores implicitly by importing and <em>using</em> a store inside another but Pinia offers a flat structuring by design while still enabling ways of cross composition among stores.</li><li>No <em>namespaced modules</em>. Given the flat architecture of stores, &quot;namespacing&quot; stores is inherent to how they are defined and you could say all stores are namespaced.</li></ul>__VP_STATIC_END__`,28),e=[o];function c(u,i,l,r,k,d){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{h as __pageData,f as default};
