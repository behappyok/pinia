import{_ as a,c as n,o as s,a as e}from"./app.fb0cb03d.js";const m='{"title":"\u5B89\u88C5","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5B89\u88C5","slug":"\u5B89\u88C5"},{"level":2,"title":"What is a Store?","slug":"what-is-a-store"},{"level":2,"title":"When should I use a Store","slug":"when-should-i-use-a-store"}],"relativePath":"getting-started.md","lastUpdated":1637048271678}',t={},o=e(`__VP_STATIC_START__<h2 id="\u5B89\u88C5" tabindex="-1">\u5B89\u88C5 <a class="header-anchor" href="#\u5B89\u88C5" aria-hidden="true">#</a></h2><p>\u4F60\u53EF\u4EE5\u4F7F\u7528\u4F60\u559C\u6B22\u7684\u5305\u7BA1\u7406\u5668\u5B89\u88C5 <code>pinia</code> :</p><div class="language-bash"><pre><code><span class="token function">yarn</span> <span class="token function">add</span> pinia
<span class="token comment">#\u6216\u4F7F\u7528 npm</span>
<span class="token function">npm</span> <span class="token function">install</span> pinia
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u5982\u679C\u60A8\u7684\u5E94\u7528\u7A0B\u5E8F\u4F7F\u7528 Vue 2\uFF0C\u60A8\u8FD8\u9700\u8981\u5B89\u88C5\u7EC4\u5408\u5F0F api: @vue/composition-api\u3002\u5982\u679C\u60A8\u4F7F\u7528 Nuxt\uFF0C\u5219\u5E94\u9075\u5FAA<a href="/ssr/nuxt.html">\u8FD9\u4E9B\u8BF4\u660E</a>\u3002</p></div><p>\u5982\u679C\u4F60\u4F7F\u7528\u7684\u662F Vue CLI\uFF0C\u4F60\u53EF\u4EE5\u8BD5\u8BD5\u8FD9\u4E2A<a href="https://github.com/wobsoriano/vue-cli-plugin-pinia" target="_blank" rel="noopener noreferrer"><strong>\u975E\u5B98\u65B9\u63D2\u4EF6</strong></a> \u3002</p><p>\u521B\u5EFA\u4E00\u4E2A pinia\uFF08\u6839store\uFF09\u5E76\u5C06\u5176\u4F20\u7ED9app:</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPinia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5982\u679C\u60A8\u4F7F\u7528\u7684\u662F Vue 2\uFF0C\u60A8\u8FD8\u9700\u8981\u6CE8\u518CPiniaVuePlugin\u63D2\u4EF6\u5E76\u5C06\u521B\u5EFA\u7684<code>pinia</code>\uFF08\u6839store\uFF09 \u6CE8\u5165\u5230app\u7684\u6839\u914D\u7F6E\u4E0A:</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPinia<span class="token punctuation">,</span> PiniaVuePlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>PiniaVuePlugin<span class="token punctuation">)</span>
<span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  el<span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
  <span class="token comment">// \u5176\u4ED6\u9009\u9879...</span>
  <span class="token comment">// ...</span>
  <span class="token comment">// note the same \`pinia\` instance can be used across multiple Vue apps on</span>
  <span class="token comment">// the same page</span>
  pinia<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u8FD9\u4E5F\u5C06\u6DFB\u52A0 devtools \u652F\u6301\u3002\u5728 Vue 3 \u4E2D\uFF0C\u4ECD\u7136\u4E0D\u652F\u6301\u65F6\u95F4\u65C5\u884C\u548C\u7F16\u8F91\u7B49\u4E00\u4E9B\u529F\u80FD\uFF0C\u56E0\u4E3A vue-devtools \u8FD8\u6CA1\u6709\u516C\u5F00\u5FC5\u8981\u7684 API\uFF0C but the devtools have way more features and the developer experience as a whole is far superior. In Vue 2, Pinia uses the existing interface for Vuex (and can therefore not be used alongside it).</p><h2 id="what-is-a-store" tabindex="-1">What is a Store? <a class="header-anchor" href="#what-is-a-store" aria-hidden="true">#</a></h2><p>A Store (like Pinia) is an entity holding state and business logic that isn&#39;t bound to your Component tree. In other words, <strong>it hosts global state</strong>. It&#39;s a bit like a component that is always there and that everybody can read off and write to. It has <strong>three concepts</strong>, the <a href="./core-concepts/state.html">state</a>, <a href="./core-concepts/getters.html">getters</a> and <a href="./core-concepts/actions.html">actions</a> and it&#39;s safe to assume these concepts are the equivalent of <code>data</code>, <code>computed</code> and <code>methods</code> in components.</p><h2 id="when-should-i-use-a-store" tabindex="-1">When should I use a Store <a class="header-anchor" href="#when-should-i-use-a-store" aria-hidden="true">#</a></h2><p>A store should contain data that can be accessed throughout your application. This includes data that is used in many places, e.g. User information that is displayed in the navbar, as well as data that needs to be preserved through pages, e.g. a very complicated multi-step form.</p><p>On the other hand, you should avoid including in the store local data that could be hosted in a component instead, e.g. the visibility of an element local to a page.</p><p>Not all applications need access to a global state, but if yours need one, Pinia will make your life easier.</p>__VP_STATIC_END__`,16),p=[o];function i(c,l,r,u,d,h){return s(),n("div",null,p)}var g=a(t,[["render",i]]);export{m as __pageData,g as default};
